/**
 * Created by:      Luke Heary
 * Date created:    8/31/16
 * File name:       TicTacToe.java
 */
 
import java.util.Scanner; 
 
public class TicTacToe {

    Scanner in;
    String player1;
    String player2;
    boolean gameOver = false;
    String[][] board;
    String coordInput;
    String[] currentCoord;

    public TicTacToe() {
        setup();
        int x, y;

        //delays the program so you can see who is X and who is O
        try {
            Thread.sleep(1500);
        } catch (InterruptedException ex) {
            Thread.currentThread().interrupt();
        }
        System.out.println("\n\n\n\n\n\n\n");
        printBoard();

        //the majority game will take place in this while loop
        while (!gameOver) {

            System.out.println("\nIt's " + player1 + "'s turn!\nType your x,y coordinates seperated by a comma!");

            coordInput = in.next();
            currentCoord = coordInput.split(",");

            while (coordInput.matches(".*[a-zA-Z]+.*") || coordInput.equals("")) {
                System.out.println("Please type valid coordinates");
                coordInput = in.nextLine();
            }

            x = Integer.parseInt(currentCoord[0]);
            y = Integer.parseInt(currentCoord[1]);

            //checks if the current spot is occupied
            while (!checkSpot(x,y)) {
                System.out.println("\nPlease try another coordinate");
                coordInput = in.next();
                currentCoord = coordInput.split(",");
                x = Integer.parseInt(currentCoord[0]);
                y = Integer.parseInt(currentCoord[1]);
            }
            board[x][y] = "X";


            printBoard();

            if (checkGame(x, y, "X")) {
                System.out.println("\n" + player1 + " won!");
                break;
            }

            if (checkDraw()) {
                System.out.println("\nIt's a draw!");
                break;
            }

            System.out.println("\nIt's " + player2 + "'s turn!\nType your x,y coordinates seperated by a comma!");
            coordInput = in.next();
            currentCoord = coordInput.split(",");
            x = Integer.parseInt(currentCoord[0]);
            y = Integer.parseInt(currentCoord[1]);

            while (!checkSpot(x,y)) {
                System.out.println("\nPlease try another coordinate");
                coordInput = in.next();
                currentCoord = coordInput.split(",");
                x = Integer.parseInt(currentCoord[0]);
                y = Integer.parseInt(currentCoord[1]);
            }
            board[x][y] = "O";

            printBoard();

            if (checkGame(x, y, "O")) {
                System.out.println("\n" + player2 + " won!");
                break;
            }

            if (checkDraw()) {
                System.out.println("\nIt's a draw!");
                break;
            }

        }
    }

    //prints the game board
    private void printBoard() {
        int x = 0;
        int y = 0;

        System.out.println("\n");
        System.out.println("   0   1   2\n");

        while (y < 3) {
            while (x < 3) {

                if (x == 0) {
                    if (y == 0) {
                        System.out.print("0  ");
                    } else if (y == 1) {
                        System.out.print("1  ");
                    } else {
                        System.out.print("2  ");
                    }
                }

                System.out.print(board[x][y]);
                if (x != 2) {
                    System.out.print(" | ");
                }
                x++;
            }
            System.out.print("\n");
            if (y != 2) {
                System.out.print("   ----------\n");
            }
            x = 0;
            y++;
        }
    }

    //check if the current coordinate is valid
    private boolean checkSpot(int x, int y) {
        if (x > 2 || y > 2) {
            return false;
        } else if (!board[x][y].equals(" ")){
            return false;
        } else {
            return true;
        }
    }

    //check to see if the player won the game
    private boolean checkGame(int x, int y, String curSymbol) {

        //check horizontal
        if (board[x][0].equals(curSymbol) && board[x][1].equals(curSymbol) && board[x][2].equals(curSymbol)) {
            return true;
        }

        //check vertical
        if (board[0][y].equals(curSymbol) && board[1][y].equals(curSymbol) && board[2][y].equals(curSymbol)) {
            return true;
        }

        //check diagonal
        if (board[0][0].equals(curSymbol) && board[1][1].equals(curSymbol) && board[2][2].equals(curSymbol)) {
            return true;
        }

        //check other diagonal
        if (board[0][2].equals(curSymbol) && board[1][1].equals(curSymbol) && board[2][0].equals(curSymbol)) {
            return true;
        }

        return false;
    }

    private boolean checkDraw() {
        int x = 0;
        int y = 0;

        while (x < 3) {
            while (y < 3) {
                if (board[x][y].equals(" ")) {
                    return false;
                }
                y++;
            }
            y = 0;
            x++;
        }
        return true;
    }

    //sets up the player names
    private void setup() {
        this.in = new Scanner(System.in);
        System.out.println("Welcome to Tic Tac Toe\nPlayer 1, please enter your name:");
        this.player1 = in.next();
        System.out.println(player1 + ", you're X's!");
        System.out.println("\nPlayer 2, please enter your name:");
        this.player2 = in.next();
        System.out.println(player2 + ", you're O's!");

        this.board = new String[3][3];

        int x = 0;
        int y = 0;
        while (x < 3) {
            while (y < 3) {
                board[x][y] = " ";
                y++;
            }
            y = 0;
            x++;
        }
    }

    public static void main(String args[]) {
        TicTacToe game = new TicTacToe();
        boolean playAgain = false;
        Scanner in = new Scanner(System.in);

        while (!playAgain) {
            System.out.println("Would you like to play again? yes/no");
            String answer = in.next();

            if (answer.equals("yes")) {
                System.out.println("Starting next round...");
                playAgain = true;
                try {
                    Thread.sleep(1500);
                } catch (InterruptedException ex) {
                    Thread.currentThread().interrupt();
                }
                TicTacToe newGame = new TicTacToe();
            } else if (answer.equals("no")){
                System.out.println("\nThanks for playing!");
                System.exit(0);
            } else {
                System.out.println("Invalid option");
            }
        }
    }
